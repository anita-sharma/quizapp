{"version":3,"sources":["quiz/html.js","quiz/cpp.js","App.js","serviceWorker.js","index.js"],"names":["que","option1","option2","option3","option4","ans","App","props","startquiz","quizname","setState","start","quiz","Html","Cpp","checkans","ind","myoption","score","state","i","index","option","submit","next","nextque","showresult","finish","reset","this","quizopen","className","id","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d912c4e5.chunk.js","sourcesContent":["export default [\n{\n\tque:\"what is the current version of html?\",\n\toption1:\"3\",\n\toption2:\"5\",\n\toption3:\"6\",\n\toption4:\"4\",\n\tans:1\n\t\n},\n{\n\tque:\"HTML is a?\",\n\toption1:\"front-end language\",\n\toption2:\"back-end language\",\n\toption3:\"both\",\n\toption4:\"none of these\",\n\tans:0\n\t\n},\n{\n\tque:\"which of the following tag is used to mark a begining of paragraph ?\",\n\toption1:\"<TD>\",\n\toption2:\"<P>\",\n\toption3:\"<TR>\",\n\toption4:\"<br>\",\n\tans:1\n\t\n},\n{\n\tque:\"From which tag descriptive list starts ?\",\n\toption1:\"<DS>\",\n\toption2:\"<LL>\",\n\toption3:\"<DD>\",\n\toption4:\"<DL>\",\n\tans:3\n\t\n},\n{\n\tque:\"Correct HTML tag for the largest heading is\",\n\toption1:\"<heading>\",\n\toption2:\"<head>\",\n\toption3:\"<h6>\",\n\toption4:\"<h1>\",\n\tans:3\n\t\n}\n];","export default [\n{\n\tque:\"Which of the following cannot be passed to a function in C++ ?\",\n\toption1:\"constant\",\n\toption2:\"structure\",\n\toption3:\"header file\",\n\toption4:\"array\",\n\tans:2\n\t\n},\n{\n\tque:\"Which of the following is not correct for virtual function in C++ ?\",\n\toption1:\"Must be declared in public section of class\",\n\toption2:\"Virtual function can be static\",\n\toption3:\"Virtual function should be accessed using pointers\",\n\toption4:\"Virtual function is defined in base class\",\n\tans:1\n\t\n},\n{\n\tque:\"A member function can always access the data in __________ , (in C++).\",\n\toption1:\"the class of which it is member\",\n\toption2:\"the object of which it is a member\",\n\toption3:\"the public part of its class\",\n\toption4:\"the private part of its class\",\n\tans:0\n\t\n},\n{\n\tque:\"Which of the following is true?\",\n\toption1:\"All objects of a class share all data members of class\",\n\toption2:\"Objects of a class do not share non-static members. Every object has its own copy.\",\n\toption3:\"Objects of a class do not share codes of non-static methods, they have their own copy\",\n\toption4:\"None of the above\",\n\tans:1\n\t\n},\n{\n\tque:\"When one object reference variable is assigned to another object reference variable then\",\n\toption1:\"a copy of the object is created\",\n\toption2:\"a copy of the reference is created\",\n\toption3:\"a copy of the reference is not created\",\n\toption4:\"it is illegal to assign one object reference variable to another object reference variable.\",\n\tans:1\n\t\n}\n];","import React,{Component} from 'react';\nimport \"./App.css\";\nimport Html from \"./quiz/html.js\";\nimport Cpp from \"./quiz/cpp.js\";\n\n\n\n\nclass App extends Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state={\n      start:false,\n      quiz:null,\n      index:0,\n      option:[null,null,null,null],\n      next:false,\n      submit:false,\n      score:0,\n      finish:false\n\n    };\n  }\n\nstartquiz=(quizname)=>{\n  if(quizname===\"html\")\n  this.setState({\n    start:true,\n    quiz:Html\n  });\nelse\n  this.setState({\n    start:true,\n    quiz:Cpp\n  });\n\n\n}\n\ncheckans=(ans,ind)=>{\n  const myoption=[null,null,null,null];\n \n  if(ans===ind)\n  {\n     myoption[ind]=\"green\";\n     this.setState({\n      score:this.state.score+1\n     });\n       \n  }\n  else\n  {\n    for(var i=0;i<4;i++)\n    {\n      if(i===ans)\n      {\n        myoption[i]=\"green\";\n      }\n      else\n      {\n        myoption[i]=\"red\";\n      }\n\n    }\n  }\n    if(this.state.index===4)\n      {\n        this.setState({\n        option:myoption,\n        submit:true\n      });\n    }\n    else\n    {\n\n        this.setState({\n        option:myoption,\n        next:true\n      });\n    }\n    \n}\n  nextque=(ans,ind)=>{\n    this.setState({\n      next:false,\n      index:this.state.index+1,\n      option:[null,null,null,null]\n    });\n  }\nshowresult=()=>{\n\n  this.setState({\n      quiz:null,\n      index:0,\n      option:[null,null,null,null],\n      next:false,\n      submit:false,\n      finish:true\n\n    });\n}\n\nreset=()=>{\n  this.setState({\n    finish:false,\n    start:false,\n    score:0\n  });\n}\n  render()\n  {\n    const quiz=this.state.quiz;\n    const index=this.state.index;\n    const quizopen=this.state.quiz?<div className=\"quizquestion\"  id=\"mywidth\">\n      <h4>{quiz[index].que}</h4>\n        <button className={this.state.option[0]} onClick={()=>this.checkans(quiz[index].ans,0)}>{quiz[index].option1}</button>\n        <button className={this.state.option[1]} onClick={()=>this.checkans(quiz[index].ans,1)}>{quiz[index].option2}</button>\n        <button className={this.state.option[2]} onClick={()=>this.checkans(quiz[index].ans,2)}>{quiz[index].option3}</button>\n        <button className={this.state.option[3]} onClick={()=>this.checkans(quiz[index].ans,3)}>{quiz[index].option4}</button>\n      </div>:null;\n            return(\n          <>\n            <center>\n           \n\n            <h1 id=\"heading\">Quiz App</h1>\n            {this.state.start?null:<div>\n              <button className=\"btnquiz\" onClick={()=>this.startquiz(\"cpp\")}>C++ Quiz</button>\n              <button className=\"btnquiz\" onClick={()=>this.startquiz(\"html\")}>HTML Quiz</button>\n              </div>}\n              {this.state.quiz?quizopen:null}\n               {this.state.next?<button className=\" btn btn-danger nextbtn\" onClick={this.nextque}>Next</button>:null}\n              {this.state.submit?<button className=\"submitbtn\" onClick={this.showresult}>submit</button>:null}\n             {this.state.finish?<div>\n\n              <h1>you got {this.state.score} out of 5</h1>\n              <button className=\"nextbtn\" onClick={this.reset}>menu</button>\n              </div>:null}\n         \n            </center>\n          </>\n\n         )\n      \n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}